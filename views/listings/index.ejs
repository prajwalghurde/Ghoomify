<% layout("layouts/boilerplate") %>
<style>
  #filter {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
  }

  .filter {
    text-align: center;
    margin-right: 2rem;
    margin-top: 2rem;
    opacity: 0.7;
  }

  .filter:hover {
    opacity: 1;
    cursor: pointer;
  }

  .filter p {
    font-size: 0.8rem;
  }

  .filter.active {
    opacity: 1;
    font-weight: bold;
  }

  .tax-info {
    display: none;
  }

  .tax-toggle {
    border: 1px solid black;
    border-radius: 1rem;
    height: 3.5rem;
    padding: 1rem;
    margin-top: 1rem;
    margin-left: 2rem;
    display: flex;
    align-items: center;
  }
</style>

<div id="filter">
  <div class="filter" data-category="trending">
    <div><i class="fa-solid fa-fire"></i></div>
    <p>Trending</p>
  </div>
  <div class="filter" data-category="rooms">
    <div><i class="fa-solid fa-bed"></i></div>
    <p>Rooms</p>
  </div>
  <div class="filter" data-category="iconic-cities">
    <div><i class="fa-solid fa-mountain-city"></i></div>
    <p>Iconic cities</p>
  </div>
  <div class="filter" data-category="mountains">
    <div><i class="fa-solid fa-mountain"></i></div>
    <p>Mountains</p>
  </div>
  <div class="filter" data-category="castles">
    <div><i class="fa-solid fa-fort-awesome"></i></div>
    <p>Castles</p>
  </div>
  <div class="filter" data-category="amazing-pools">
    <div><i class="fa-solid fa-person-swimming"></i></div>
    <p>Amazing Pools</p>
  </div>
  <div class="filter" data-category="camping">
    <div><i class="fa-solid fa-campground"></i></div>
    <p>Camping</p>
  </div>
  <div class="filter" data-category="farms">
    <div><i class="fa-solid fa-cow"></i></div>
    <p>Farms</p>
  </div>
  <div class="filter" data-category="arctic">
    <div><i class="fa-solid fa-snowflake"></i></div>
    <p>Arctic</p>
  </div>
  <div class="filter" data-category="domes">
    <div><i class="fa-solid fa-igloo"></i></div>
    <p>Domes</p>
  </div>
  <div class="filter" data-category="boats">
    <div><i class="fa-solid fa-ship"></i></div>
    <p>Boats</p>
  </div>

  <div class="tax-toggle">
    <div class="form-check-reverse form-switch">
      <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
      <label class="form-check-label" for="flexSwitchCheckDefault">Display total after taxes</label>
    </div>
  </div>
</div>

<div class="row row-cols-lg-3 row-cols-md-2 row-cols-sm-1 mt-3">
  <% for(let listing of allListings) { %>
    <a href="/listings/<%= listing._id %>" class="listing-link">
      <div class="card col listing-card" data-category="<%= listing.category %>">
        <img src="<%= listing.image.url %>" class="card-img-top" alt="listing image" style="height: 20rem;" />
        <div class="card-img-overlay"></div>
        <div class="card-body">
          <p class="card-text">
            <b><%= listing.title %></b> <br>
            <% if (listing.price) { %>
              â‚¹<%= listing.price.toLocaleString("en-IN") %> /night
              <i class="tax-info"> +18% GST </i>
            <% } else { %>
              Price not available
            <% } %>
          </p>
        </div>
      </div>
    </a>
  <% } %>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const filters = document.querySelectorAll('.filter');
    let taxSwitch = document.getElementById('flexSwitchCheckDefault');
    const urlParams = new URLSearchParams(window.location.search);
    const currentCategory = urlParams.get('category') || 'trending';
    const currentSearch = urlParams.get('search') || '';

    // Highlight the active filter based on the current URL
    filters.forEach(filter => {
      const category = filter.getAttribute('data-category');
      if (category === currentCategory) {
        filter.classList.add('active');
      }

      filter.addEventListener('click', () => {
        const newCategory = filter.getAttribute('data-category');
        // Build the URL with both category and search parameters
        let url = '/listings';
        const params = new URLSearchParams();
        if (newCategory !== 'trending') {
          params.set('category', newCategory);
        }
        if (currentSearch) {
          params.set('search', currentSearch);
        }
        if (params.toString()) {
          url += `?${params.toString()}`;
        }
        window.location.href = url;
      });
    });

    // Tax toggle functionality
    taxSwitch.addEventListener('click', () => {
      let taxInfo = document.getElementsByClassName('tax-info');
      for (let info of taxInfo) {
        if (info.style.display !== 'inline') {
          info.style.display = 'inline';
        } else {
          info.style.display = 'none';
        }
      }
    });
  });
</script>